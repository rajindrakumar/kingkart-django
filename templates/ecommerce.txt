............ E commerce website full explanation ..................

> To create any django website , we need to make virtual environment 
 ( virtual environment makes particular space to make your app)
 
 > before creating virtual environment, if you check installed things then

 > pip freeze ( then alot of module you can see installed globally (in global scope of your computer))

 To create virtual environment
>py -m venv env (env is virtual environment name)

To activate virtual environment
>env\Scripts\activate  (all the things will be done after the activating the venv)

To deactivae the virtual environment
>deactivae

If you check how many things is installed in your venv , then it should be very less , which is installed now
>pip freeze

After This , we need to create django
inside venv > pip install django

if you want to download , some particular version , then 
>pip install django == 3.1

To create Project
>django-admin startproject greatkart . (. it is used to create Project in same dirctory)

after creating Project, we ready to check live server 
>python manage.py runserver ( it will show , the sample django hosting page)

Create views.py in greatkart dirctory
in views.py 
....simple demo ....

from django.http import HttpResponse
def home(request):
    return HttpResponse('Home Page') --> it will show the Home page written in hosting page 

in urls.py
from .import views

urlPatterns = [
    path(...............default....),
    path('',views.home,name='home'),
]


Download Templates
>create tempplates folder in main dirctory
> add the tempplates in setting.py

Templates = [
    'DIRS' : ['tempplates'],
]


create static folder in Project( greatkart) dirctory
PASTE css,fonts,images,js in static folder ( which was downloaded from Templates)

go to setting.py (add path)


STATIC_URL = '/static/'
STATIC_ROOT =BASE_DIR / 'static'
STATICFILES_DIRS = [
    'greatkart/static',
]

Run this command , which will create static folder in main dirctory, and all the things are copied in to it 

> python manage.py collectstatic

also we need to add in project directory url.py

from django.contrib import admin
from django.urls import path,include
from . import views
from django.conf.urls.static import static
from django.conf import settings
urlpatterns = [
    path('admin/', admin.site.urls),
    path('',views.home,name='home'),
    
] + static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT) (add to static file  working  )

>in Project directory> urls.py

from django.contrib import admin
from django.urls import path,include
from . import views
from django.conf.urls.static import static
from django.conf import settings

urlpatterns = [
    path('admin/', admin.site.urls),
    path('',views.home,name='home'), // added this to land into the first page 
    
] + static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)


in views.py

from django.shortcuts import render
from store.models import Product

def home(request):
     
    return render(request,'home.html')


Create includes folder in tempplates
>create navbar , footer in includes folder

in navbar.html (copy and paste , the header code of Templates > index.html )

{% load static %}  // to work css,js fine, we need to load static

<header class="section-header">
<nav class="navbar p-md-0 navbar-expand-sm navbar-light border-bottom">
<div class="container">
  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTop4" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>
  <div class="collapse navbar-collapse" id="navbarTop4">
    <ul class="navbar-nav mr-auto">
    	<li class="nav-item dropdown">
		 	<a href="#" class="nav-link">   English </a>
		    
		</li>
		<li class="nav-item dropdown">
			<a href="#" class="nav-link"> USD </a>
		</li>
    </ul>
    <ul class="navbar-nav">
		<li><a href="#" class="nav-link"> <i class="fa fa-envelope"></i> Email </a></li>
		<li><a href="#" class="nav-link"> <i class="fa fa-phone"></i> Call us </a></li>
	</ul> <!-- list-inline //  -->
  </div> <!-- navbar-collapse .// -->
</div> <!-- container //  -->
</nav>

<section class="header-main border-bottom">
	<div class="container">
<div class="row align-items-center">
	<div class="col-lg-2 col-md-3 col-6">
		<a href="{% url 'home' %}" class="brand-wrap">

    // in url linking like src ="{% static 'actual path of css or js ' %}" , to working fine in django

			<img class="logo" src="{% static './images/logo.png' %}">
		</a> <!-- brand-wrap.// -->
	</div>
	<div class="col-lg col-sm col-md col-6 flex-grow-0">
		<div class="category-wrap dropdown d-inline-block float-right">
			<button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"> 
				<i class="fa fa-bars"></i> All category 
			</button>
			<div class="dropdown-menu">

            // in url linking like href="{% url 'file _name' %}" , to working fine in django

				<a class="dropdown-item" href="{% url 'store' %}">All Products</a>
			{% for category in links %}
				<a class="dropdown-item" href="{{ category.get_url }}">{{ category.category_name}}</a>
			{% endfor %}
			</div>
		</div>  <!-- category-wrap.// -->
	</div> <!-- col.// -->
	<a href="{% url 'store' %}" class="btn btn-outline-primary">Store</a>
	<div class="col-lg  col-md-6 col-sm-12 col">
		<form action="#" class="search">
			<div class="input-group w-100">
			    <input type="text" class="form-control" style="width:60%;" placeholder="Search">
			    
			    <div class="input-group-append">
			      <button class="btn btn-primary" type="submit">
			        <i class="fa fa-search"></i>
			      </button>
			    </div>
		    </div>
		</form> <!-- search-wrap .end// -->
	</div> <!-- col.// -->
	<div class="col-lg-3 col-sm-6 col-8 order-2 order-lg-3">
				<div class="d-flex justify-content-end mb-3 mb-lg-0">
					<div class="widget-header">
						<small class="title text-muted">Welcome guest!</small>
						<div> 
							<a href="./signin.html">Sign in</a> <span class="dark-transp"> | </span>
							<a href="./register.html"> Register</a>
						</div>
					</div>
					<a href="{% url 'cart' %}" class="widget-header pl-3 ml-3">
						<div class="icon icon-sm rounded-circle border"><i class="fa fa-shopping-cart"></i></div>
						<span class="badge badge-pill badge-danger notify">0</span>
					</a>
				</div> <!-- widgets-wrap.// -->
			</div> <!-- col.// -->
</div> <!-- row.// -->
	</div> <!-- container.// -->
</section> <!-- header-main .// -->




</header> <!-- section-header.// -->


in footer.html ..........

{% load static %}

<!-- ========================= FOOTER ========================= -->
<footer class="section-footer border-top">
	<div class="container">
		<section class="footer-bottom border-top row">
			<div class="col-md-2">
				<p class="text-muted"> &copy 2019 Company name </p>
			</div>
			<div class="col-md-8 text-md-center">
				<span  class="px-2">info@pixsellz.io</span>
				<span  class="px-2">+879-332-9375</span>
				<span  class="px-2">Street name 123, Avanue abc</span>
			</div>
			<div class="col-md-2 text-md-right text-muted">
				<i class="fab fa-lg fa-cc-visa"></i>
				<i class="fab fa-lg fa-cc-paypal"></i>
				<i class="fab fa-lg fa-cc-mastercard"></i>
			</div>
		</section>
	</div><!-- //container -->
</footer>
<!-- ========================= FOOTER END // ========================= -->



//create a base files in tempplates
in base.html

{% load static %}
<!DOCTYPE HTML>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv="pragma" content="no-cache" />
<meta http-equiv="cache-control" content="max-age=604800" />
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

<title>GreatKart | One of the Biggest Online Shopping Platform</title>

<link href="{% static 'images/favicon.ico' %}" rel="shortcut icon" type="image/x-icon">

<!-- jQuery -->

// in url linking like src ="{% static 'actual path of css or js ' %}" , to working fine in django

<script src="{% static 'js/jquery-2.0.0.min.js' %}" type="text/javascript"></script>

<!-- Bootstrap4 files-->
<script src="{% static 'js/bootstrap.bundle.min.js' %}" type="text/javascript"></script>
<link href="{% static 'css/bootstrap.css' %}" rel="stylesheet" type="text/css"/>

<!-- Font awesome 5 -->
<link href="{% static 'fonts/fontawesome/css/all.min.css' %}" type="text/css" rel="stylesheet">

<!-- custom style -->
<link href="{% static 'css/ui.css' %}" rel="stylesheet" type="text/css"/>
<link href="{% static 'css/responsive.css' %}" rel="stylesheet" media="only screen and (max-width: 1200px)" />

<!-- custom javascript -->
<script src="{% static 'js/script.js' %}" type="text/javascript"></script>

<script type="text/javascript">
/// some script

// jquery ready start
$(document).ready(function() {
	// jQuery code

}); 
// jquery end
</script>

</head>
<body>

<!-- includes header  -->
{% include 'includes/navbar.html' %}

{% block content%}

<!-- All the content should be written inside this block content  -->

{% endblock %}

<!-- includes footer   -->
{% include 'includes/footer.html' %}


</body>
</html>


Suppose example, in home page , we want to show some content like which should be shown in home 

in home.html 

so , we need to make make sample like this :


{% extends 'base.html' %} // by extends base class on which there is header,footer
{% load static %}   //load static to work css,js fine

{% block content %} 
// all the source code of home page should be written in inside the block content .
{% endblock %} 

.......  in home.html ...............
{% extends 'base.html' %}
{% load static %}
{% block content %}

<!-- ========================= SECTION MAIN ========================= -->
<section class="section-intro padding-y-sm">
<div class="container">

<div class="intro-banner-wrap">
	<img src="{% static 'images/banners/banner.jpg' %}" class="img-fluid rounded">
</div>

</div> <!-- container //  -->
</section>
<!-- ========================= SECTION MAIN END// ========================= -->

<!-- ========================= SECTION  ========================= -->
<section class="section-name padding-y-sm">
<div class="container">

<header class="section-heading">
	<a href="{% url 'store' %}" class="btn btn-outline-primary float-right">See all</a>
	<h3 class="section-title">Popular products</h3>
</header><!-- sect-heading -->

	
<div class="row">
	{% for product in products %}
	<div class="col-md-3">
		<div class="card card-product-grid">
			<a href="{{ product.get_url}}" class="img-wrap"> <img src="{{product.images.url}}"> </a>
			<figcaption class="info-wrap">
				<a href="{{ product.get_url}}" class="title">{{product.Product_name}}</a>
				<div class="price mt-1">${{product.price}}</div> <!-- price-wrap.// -->
			</figcaption>
		</div>
	</div> 
	{% endfor %}  <!-- col.// -->
</div> <!-- row.// -->

</div><!-- container // -->
</section>
<!-- ========================= SECTION  END// ========================= -->


{% endblock %}

To run the server
> python manage.py runserver


> after that create one app in main directory
>python manage.py startapp category 

> we need to put the name of app in setting .py 
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'category',
     
]

in category app
 > models.py 

from django.db import models
from django.urls import reverse
# Create your models here.

class Category(models.Model):
    category_name = models.CharField(max_length = 50, unique=True)
    slug = models.SlugField(max_length = 100, unique=True)
    description = models.TextField(max_length = 255, blank = True)
    cat_image = models.ImageField(upload_to = 'photos/categories', blank = True)

    # to correct the plural form , we use verbose
    class Meta:
        verbose_name = 'category'
        verbose_name_plural = 'categories'
 
#   this function will make the Category of each product , when they click on that , then it will show that Category product only 
    def get_url(self):
         return reverse('products_by_category',args=[self.slug])

    def __str__(self):
        return self.category_name


after the creating the model , we need to register this also in category app admin.py

from django.contrib import admin
from .models import Category

# Register your models here.

class CategoryAdmin(admin.ModelAdmin):
    # This is the code for prepopulatd slug 
    prepopulated_fields = {'slug': ('category_name',)}

    # To display the table in admin category page
    list_display  = ('category_name','slug')
admin.site.register(Category,CategoryAdmin)

//to register , we need to write this code
admin.site.register(Category,CategoryAdmin)

*Now , we need to do migrations to do changes in models
>python manage.py makemigrations (it will detect all changes)
>python manage.py makemigrate (it will apply all changes and make table on admin site)

*create super user (for admin access)

>python manage.py createsuperuser
username : admin
email : raj.ecommerce@gmail.com
password : 12345@



................................... Till today from left..........................................



